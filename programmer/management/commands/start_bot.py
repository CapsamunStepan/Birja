import os
import django
import logging
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext
from django.core.management.base import BaseCommand
from programmer.models import TelegramUser, Portfolio
from django.contrib.auth import get_user_model
from dotenv import load_dotenv

load_dotenv()
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# Django setup
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "Birja.settings")
django.setup()

User = get_user_model()
logging.basicConfig(level=logging.INFO)


def start(update: Update, context: CallbackContext):
    args = context.args
    tg_user = update.effective_user

    if args:
        token = args[0]
        try:
            portfolio = Portfolio.objects.select_related("user").filter(telegram_link_token=token).first()
            if portfolio:
                user = portfolio.user
                TelegramUser.objects.get_or_create(
                    user=user,
                    defaults={"telegram_id": tg_user.id}
                )
                user.telegram_link_token = None
                user.save()
                update.message.reply_text("‚úÖ Telegram —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω!")
            else:
                update.message.reply_text("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º —Ç–æ–∫–µ–Ω–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        except Exception as e:
            print(e)
            logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ —Ç–æ–∫–µ–Ω–∞")
            update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ.")
    else:
        update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –ü–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ —Å —Å–∞–π—Ç–∞, —á—Ç–æ–±—ã –ø—Ä–∏–≤—è–∑–∞—Ç—å Telegram.")


class Command(BaseCommand):
    help = "–ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ Telegram –±–æ—Ç–∞"

    def handle(self, *args, **options):
        updater = Updater(token=TELEGRAM_BOT_TOKEN, use_context=True)
        dp = updater.dispatcher
        dp.add_handler(CommandHandler("start", start, pass_args=True))
        logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
        updater.start_polling()
        updater.idle()
